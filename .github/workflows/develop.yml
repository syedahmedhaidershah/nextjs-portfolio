name: 'Develop deploy app'

on:
  push:
    branches:
      - develop
      - dev
      - main
      - "feat/ci-cd"

permissions:
  contents: read


jobs:
  CI:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['22.x']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache node_modules
        if: github.ref == 'refs/heads/main' ||  github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/trunk'
        uses: actions/cache@v4
        id: cache-npm
        env:
          cache-name: cache-node-modules
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies & configure environment
        continue-on-error: false
        run: |
          chmod +x ./.github/workflows/scripts/upload-all.sh
          npm i -g yarn
          yarn install
        
      - name: build project
        continue-on-error: false
        run: npm run build
        
      - name: Enable error page
        continue-on-error: false
        run: mkdir -p out && cp public/error.html out/error.html

      - name: CI & Updates
        env:
          S3_KEY: ${{ secrets.S3_KEY }}
        continue-on-error: false     
        run: |
          /bin/bash ./.github/workflows/scripts/upload-all.sh

      - name: Verify build directory
        run: |
          ls out
          EXISTS=$(ls out)
          if [[ -z "$EXISTS" ]]; then
            exit 1;
          fi
      
      - name: Uploading build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: out
          path: out/
          if-no-files-found: error
          retention-days: 1
          compression-level: 9
          overwrite: true
  CD:
    needs: [CI]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['22.x']
    steps:
      - name: Download Build artifacts
        uses: actions/download-artifact@v4
        with:
          name: out
          path: out/

      - name: Setup SSH configuration
        run: |
          mkdir -p ~/.ssh/
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PVT_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUB_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 400 ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa.pub

      - name: Deploy
        env:
          SSH_PATH: ${{ vars.SSH_PATH }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        continue-on-error: false
        run: |
          set -x
          ls out/
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "mkdir -p $SSH_PATH"
          rsync -avz --delete -e 'ssh -o StrictHostKeyChecking=no' out/ $SSH_USER@$SSH_HOST:$SSH_PATH/
          echo deployed

